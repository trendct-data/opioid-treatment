drug_deaths_mega %>%
group_by(Location2, town_type) %>%
summarise(total=n()) %>%
mutate(percent=round(total/sum(total, na.rm=T)*100,2))
drug_deaths_mega %>%
group_by(Location2, town_type) %>%
summarise(total=n()) %>%
mutate(percent=round(total/sum(total, na.rm=T)*100,2)) %>%
select(Location2, town_type, percent) %>%
spread(town_type, percent)
library(swirl)
install.packages("swirl")
library(swirl)
swirl()
dice_sqr
ex2_fair <- sum(dice_sqr*PDF)
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair - 3.5^2
sum(dice_sq*dice_high) - mean(dice_high)^2
sum(dice_sq*edh) - mean(edh)^2
sum(dice_sqr*edh) - mean(edh)^2
sum(dice_sqr*dice_high) - mean(edh)^2
sum(dice_sqr*dice_high) - edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(n)
2/sqrt(Poisson(4))
2/sqrt(4)
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(n,x) * p^x * (1-p)^(n-x)
choose(.8,.3) * p^.3 * (1-p)^(.8-.3)
choose(.8,.3) * p^.3 * (1-0)^(.8-.3)
d
23
choose(5,x)*(.8)^x*(.2)^(5-x) for x=3,4,5
choose(5,.3)*(.8)^x*(.2)^(5-3) for x=3,4,5
choose(5,3)*(.8)^3*(.2)^(5-3)
(choose(5,3)*(.8)^3*(.2)^(5-3)) + (choose(5+4)*(.8)^4*(.2)^(5-4)) + (choose(5+5)*(.8)^5*(.2)^(5-5))
(choose(5,3)*(.8)^3*(.2)^(5-3)) + (choose(5,4)*(.8)^4*(.2)^(5-4)) + (choose(5,5)*(.8)^5*(.2)^(5-5))
pbinom(2,5,.8, lower.tail=F)
pbinom(2,size=5,prob=.8,lower.tail=FALSE)
qnorm()
2
qnorm(.1)
1
0
2
qnorm(.975,mean=3,sd=2)
2
1.96*2 + 3
2
pnorm(1200,mean=1020,sd=50,lower.tail=FALSE)
3
pnorm((1200-1020)/50,lower.tail=FALSE)
3
qnorm(.75,mean=1020,sd=50)
pnorm(qnorm(.53))
qnorm(pnorm(.53))
3
ppois(3,2.5 * 4)
3
pbinoms(5,1000,.01)
pbinom(5,1000,.01)
3
ppois(5,1000*.01)
coinPlot(n=10)
coinPlot(n=10000)
qnorm(95)
qnorm(.95)
3
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
3
binom.test(60,100)$conf.int
3
mywald(.2)
ACCompar(20)
3
lamb <- 5/94.32
3
lamb +c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
3
poisson.test(5,94.32)$conf
View(drug_deaths_mega)
table(drug_deaths_mega$residence.and.death)
library(dplyr)
library(tidyr)
library(ctnamecleaner)
library(ggplot2)
library(extrafont)
library(scales)
library(rgdal)
require(maptools)
library(stringr)
library(knitr)
library(lubridate)
library("censusapi")
source("keys.R")
treat <- read.csv("https://data.ct.gov/api/views/4pv7-jhxb/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
location_info <- drug_deaths_meaga %>%
group_by(YEAR, residence.and.death)
location_info <- drug_deaths_mega %>%
group_by(YEAR, residence.and.death) %>%
location_info <- drug_deaths_mega %>%
group_by(YEAR, residence.and.death)
View(drug_deaths_mega)
location_info <- drug_deaths_mega %>%
group_by(Year, residence.and.death)
View(location_info)
location_info <- drug_deaths_mega %>%
group_by(Year, residence.and.death) %>%
summarise(deaths=n())
View(location_info)
location_info <- drug_deaths_mega %>%
group_by(residence.and.death) %>%
summarise(deaths=n())
ggplot(location_info, aes(residence.and.death, deaths)) + geom_bar()
ggplot(location_info, aes(residence.and.death, deaths)) + geom_bar(stat="identity")
View(drug_deaths_mega)
location_info <- drug_deaths_mega %>%
filter(update_fent=="Yes") %>%
group_by(residence.and.death) %>%
summarise(deaths=n())
gg <- ggplot(location_info, aes(residence.and.death, deaths))
gg <- gg + geom_bar(stat="identity")
gg <- gg + labs(x=NULL, y="Overdoses", title="Fentanyl overdoses by location type",
subtitle="",
caption="SOURCE: Department of Mental Health and Addiction Services, Medical Examiner's Office\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Lato Regular")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.text.x=element_text(angle=90, vjust=0.4,hjust=1))
#gg <- gg + theme(axis.ticks=element_blank())
#gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
location_info <- drug_deaths_mega %>%
filter(update_heroin=="Yes") %>%
group_by(residence.and.death) %>%
summarise(deaths=n())
gg <- ggplot(location_info, aes(residence.and.death, deaths))
gg <- gg + geom_bar(stat="identity")
gg <- gg + labs(x=NULL, y="Overdoses", title="Heroin overdoses by location type",
subtitle="",
caption="SOURCE: Department of Mental Health and Addiction Services, Medical Examiner's Office\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Lato Regular")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.text.x=element_text(angle=90, vjust=0.4,hjust=1))
#gg <- gg + theme(axis.ticks=element_blank())
#gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
location_info <- drug_deaths_mega %>%
filter(update_presc=="Yes") %>%
group_by(residence.and.death) %>%
summarise(deaths=n())
gg <- ggplot(location_info, aes(residence.and.death, deaths))
gg <- gg + geom_bar(stat="identity")
gg <- gg + labs(x=NULL, y="Overdoses", title="Prescription drug overdoses by location type",
subtitle="",
caption="SOURCE: Department of Mental Health and Addiction Services, Medical Examiner's Office\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Lato Regular")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.text.x=element_text(angle=90, vjust=0.4,hjust=1))
#gg <- gg + theme(axis.ticks=element_blank())
#gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
pharm <- read.csv("https://data.ct.gov/api/views/wvv7-dnrt/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
pharm2 <- read.csv("https://data.ct.gov/api/views/2vby-9bet/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
counselors <- read.csv("https://data.ct.gov/api/views/jixj-wkjd/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
drop <- read.csv("https://data.ct.gov/api/views/h7ba-v8cg/rows.csv?accessType=DOWNLOAD", stringsAsFactors = F)
View(pharm)
View(pharm2)
View(counselors)
View(drop)
library(ctnamecleaner)
View(pharm2)
pharm <- read.csv("https://data.ct.gov/api/views/2vby-9bet/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
pharm <- ctnamecleaner(city, pharm)
?ctnamecleaner
View(pharm)
pharm <- ctnamecleaner(City, pharm)
View(pharm)
pharm <- pharm %>%
group_by(real.town.name) %>%
summarise(pharmacies=n())
View(pharm)
counselors <- ctnamecleaner(City, counselors)
counselors <- counselors %>%
group_by(real.town.name) %>%
summarise(counselors=n())
drop <- ctnamecleaner(City, drop)
drop <- drop %>%
group_by(real.town.name) %>%
summarise(drop=n())
counselors <- counselors %>%
group_by(real.town.name) %>%
summarise(counselors=n())
counselors <- ctnamecleaner(City, counselors)
counselors <- read.csv("https://data.ct.gov/api/views/jixj-wkjd/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
counselors <- ctnamecleaner(City, counselors)
counselors <- read.csv("https://data.ct.gov/api/views/jixj-wkjd/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
counselors <- ctnamecleaner(City, counselors)
counselors <- counselors %>%
filter(State=="CT") %>%
group_by(real.town.name) %>%
summarise(counselors=n())
counselors <- read.csv("https://data.ct.gov/api/views/jixj-wkjd/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
counselors <- read.csv("https://data.ct.gov/api/views/jixj-wkjd/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
counselors <- subset(counselrors, State=="CT")
counselors <- read.csv("https://data.ct.gov/api/views/jixj-wkjd/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
counselors <- subset(counselors, State=="CT")
counselors <- ctnamecleaner(City, counselors)
counselors <- counselors %>%
group_by(real.town.name) %>%
summarise(counselors=n())
drop <- read.csv("https://data.ct.gov/api/views/h7ba-v8cg/rows.csv?accessType=DOWNLOAD", stringsAsFactors = F)
drop <- ctnamecleaner(City, drop)
drop <- drop %>%
group_by(real.town.name) %>%
summarise(drop=n())
View(combined)
pharm <- read.csv("https://data.ct.gov/api/views/2vby-9bet/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
pharm <- ctnamecleaner(City, pharm)
pharm <- pharm %>%
group_by(real.town.name) %>%
summarise(pharmacies=n())
colnames(pharm) <- c("town.of.residence", "pharm")
counselors <- read.csv("https://data.ct.gov/api/views/jixj-wkjd/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
counselors <- subset(counselors, State=="CT")
counselors <- ctnamecleaner(City, counselors)
counselors <- counselors %>%
group_by(real.town.name) %>%
summarise(counselors=n())
colnames(counselors) <- c("town.of.residence", "couns")
drop <- read.csv("https://data.ct.gov/api/views/h7ba-v8cg/rows.csv?accessType=DOWNLOAD", stringsAsFactors = F)
drop <- ctnamecleaner(City, drop)
drop <- drop %>%
group_by(real.town.name) %>%
summarise(drop=n())
colnames(drop) <- c("town.of.residence", "drop.offs")
combined2 <- left_join(combined, pharm)
combined2 <- left_join(combined2, counselors)
combined2 <- left_join(combined2, drop)
View(combined2)
combined2$per_capita_p <- round(combined2$pharm/combined2$pop*10000,2)
combined2$per_capita_c <- round(combined2$couns/combined2$pop*10000,2)
combined2$per_capita_d <- round(combined2$drop.offs/combined2$pop*10000,2)
View(combined2)
cor(combined2$per_capita_a, per_capita_p, use="complete.obs")
cor(combined2$per_capita_a, combined2$per_capita_p, use="complete.obs")
cor(combined2$per_capita_a, combined2$per_capita_c, use="complete.obs")
cor(combined2$per_capita_a, combined2$per_capita_d, use="complete.obs")
cor(combined2$per_capita_o, combined2$per_capita_p, use="complete.obs")
cor(combined2$per_capita_o, combined2$per_capita_c, use="complete.obs")
cor(combined2$per_capita_o, combined2$per_capita_d, use="complete.obs")
View(combined2)
combined3 <- combined2 %>%
select(town.of.residence, per_capita_a, per_capita_o, per_capita_p, per_capita_c, per_capita_c)
combined3 <- combined2 %>%
select(town.of.residence, town_type, per_capita_a, per_capita_o, per_capita_p, per_capita_c, per_capita_c) %>%
gather("town_type", "per_capita", 3:7)
combined3 <- combined2 %>%
select(town.of.residence, town_type, per_capita_a, per_capita_o, per_capita_p, per_capita_c, per_capita_c)
combined3 <- combined2 %>%
select(town.of.residence, town_type, per_capita_a, per_capita_o, per_capita_p, per_capita_c, per_capita_c) %>%
gather("town_type", "per_capita", 3:6)
combined3 <- combined2 %>%
select(town.of.residence, town_type, per_capita_a, per_capita_o, per_capita_p, per_capita_c, per_capita_c) %>%
gather("type", "per_capita", 3:6)
View(combined3)
pharm <- read.csv("https://data.ct.gov/api/views/2vby-9bet/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
pharm <- ctnamecleaner(City, pharm)
pharm <- pharm %>%
group_by(real.town.name) %>%
summarise(pharmacies=n())
colnames(pharm) <- c("town.of.residence", "pharm")
counselors <- read.csv("https://data.ct.gov/api/views/jixj-wkjd/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
counselors <- subset(counselors, State=="CT")
counselors <- ctnamecleaner(City, counselors)
counselors <- counselors %>%
group_by(real.town.name) %>%
summarise(counselors=n())
colnames(counselors) <- c("town.of.residence", "couns")
drop <- read.csv("https://data.ct.gov/api/views/h7ba-v8cg/rows.csv?accessType=DOWNLOAD", stringsAsFactors = F)
drop <- ctnamecleaner(City, drop)
drop <- drop %>%
group_by(real.town.name) %>%
summarise(drop=n())
colnames(drop) <- c("town.of.residence", "drop.offs")
combined2 <- left_join(combined, pharm)
combined2 <- left_join(combined2, counselors)
combined2 <- left_join(combined2, drop)
combined2$per_capita_p <- round(combined2$pharm/combined2$pop*10000,2)
combined2$per_capita_c <- round(combined2$couns/combined2$pop*10000,2)
combined2$per_capita_d <- round(combined2$drop.offs/combined2$pop*10000,2)
cor(combined2$per_capita_a, combined2$per_capita_p, use="complete.obs")
cor(combined2$per_capita_a, combined2$per_capita_c, use="complete.obs")
cor(combined2$per_capita_a, combined2$per_capita_d, use="complete.obs")
cor(combined2$per_capita_o, combined2$per_capita_p, use="complete.obs")
cor(combined2$per_capita_o, combined2$per_capita_c, use="complete.obs")
cor(combined2$per_capita_o, combined2$per_capita_d, use="complete.obs")
combined3 <- combined2 %>%
select(town.of.residence, town_type, per_capita_a, per_capita_o, per_capita_p, per_capita_c, per_capita_d) %>%
gather("type", "per_capita", 3:6)
combined3$type <- ifelse("per_capita_a", "admissions", combined3$type )
combined3$type <- ifelse("per_capita_o", "overdoses", combined3$type )
combined3$type <- ifelse("per_capita_p", "pharmacies", combined3$type )
combined3$type <- ifelse("per_capita_c", "counselors", combined3$type )
combined3$type <- ifelse("per_capita_d", "drop.offs", combined3$type )
View(combined3)
pharm <- read.csv("https://data.ct.gov/api/views/2vby-9bet/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
pharm <- ctnamecleaner(City, pharm)
pharm <- pharm %>%
group_by(real.town.name) %>%
summarise(pharmacies=n())
colnames(pharm) <- c("town.of.residence", "pharm")
counselors <- read.csv("https://data.ct.gov/api/views/jixj-wkjd/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
counselors <- subset(counselors, State=="CT")
counselors <- ctnamecleaner(City, counselors)
counselors <- counselors %>%
group_by(real.town.name) %>%
summarise(counselors=n())
colnames(counselors) <- c("town.of.residence", "couns")
drop <- read.csv("https://data.ct.gov/api/views/h7ba-v8cg/rows.csv?accessType=DOWNLOAD", stringsAsFactors = F)
drop <- ctnamecleaner(City, drop)
drop <- drop %>%
group_by(real.town.name) %>%
summarise(drop=n())
colnames(drop) <- c("town.of.residence", "drop.offs")
combined2 <- left_join(combined, pharm)
combined2 <- left_join(combined2, counselors)
combined2 <- left_join(combined2, drop)
combined2$per_capita_p <- round(combined2$pharm/combined2$pop*10000,2)
combined2$per_capita_c <- round(combined2$couns/combined2$pop*10000,2)
combined2$per_capita_d <- round(combined2$drop.offs/combined2$pop*10000,2)
cor(combined2$per_capita_a, combined2$per_capita_p, use="complete.obs")
cor(combined2$per_capita_a, combined2$per_capita_c, use="complete.obs")
cor(combined2$per_capita_a, combined2$per_capita_d, use="complete.obs")
cor(combined2$per_capita_o, combined2$per_capita_p, use="complete.obs")
cor(combined2$per_capita_o, combined2$per_capita_c, use="complete.obs")
cor(combined2$per_capita_o, combined2$per_capita_d, use="complete.obs")
combined3 <- combined2 %>%
select(town.of.residence, town_type, per_capita_a, per_capita_o, per_capita_p, per_capita_c, per_capita_d) %>%
gather("type", "per_capita", 3:6)
combined3$type <- ifelse(combined3$type=="per_capita_a", "admissions", combined3$type )
combined3$type <- ifelse(combined3$type=="per_capita_o", "overdoses", combined3$type )
combined3$type <- ifelse(combined3$type=="per_capita_p", "pharmacies", combined3$type )
combined3$type <- ifelse(combined3$type=="per_capita_c", "counselors", combined3$type )
combined3$type <- ifelse(combined3$type=="per_capita_d", "drop.offs", combined3$type )
View(combined3)
pharm <- read.csv("https://data.ct.gov/api/views/2vby-9bet/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
pharm <- ctnamecleaner(City, pharm)
pharm <- pharm %>%
group_by(real.town.name) %>%
summarise(pharmacies=n())
colnames(pharm) <- c("town.of.residence", "pharm")
counselors <- read.csv("https://data.ct.gov/api/views/jixj-wkjd/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
counselors <- subset(counselors, State=="CT")
counselors <- ctnamecleaner(City, counselors)
counselors <- counselors %>%
group_by(real.town.name) %>%
summarise(counselors=n())
colnames(counselors) <- c("town.of.residence", "couns")
drop <- read.csv("https://data.ct.gov/api/views/h7ba-v8cg/rows.csv?accessType=DOWNLOAD", stringsAsFactors = F)
drop <- ctnamecleaner(City, drop)
drop <- drop %>%
group_by(real.town.name) %>%
summarise(drop=n())
colnames(drop) <- c("town.of.residence", "drop.offs")
combined2 <- left_join(combined, pharm)
combined2 <- left_join(combined2, counselors)
combined2 <- left_join(combined2, drop)
combined2$per_capita_p <- round(combined2$pharm/combined2$pop*10000,2)
combined2$per_capita_c <- round(combined2$couns/combined2$pop*10000,2)
combined2$per_capita_d <- round(combined2$drop.offs/combined2$pop*10000,2)
cor(combined2$per_capita_a, combined2$per_capita_p, use="complete.obs")
cor(combined2$per_capita_a, combined2$per_capita_c, use="complete.obs")
cor(combined2$per_capita_a, combined2$per_capita_d, use="complete.obs")
cor(combined2$per_capita_o, combined2$per_capita_p, use="complete.obs")
cor(combined2$per_capita_o, combined2$per_capita_c, use="complete.obs")
cor(combined2$per_capita_o, combined2$per_capita_d, use="complete.obs")
combined3 <- combined2 %>%
select(town.of.residence, town_type, per_capita_a, per_capita_o, per_capita_p, per_capita_c, per_capita_d) %>%
gather("type", "per_capita", 3:7)
combined3$type <- ifelse(combined3$type=="per_capita_a", "admissions", combined3$type )
combined3$type <- ifelse(combined3$type=="per_capita_o", "overdoses", combined3$type )
combined3$type <- ifelse(combined3$type=="per_capita_p", "pharmacies", combined3$type )
combined3$type <- ifelse(combined3$type=="per_capita_c", "counselors", combined3$type )
combined3$type <- ifelse(combined3$type=="per_capita_d", "drop.offs", combined3$type )
View(combined3)
gg <- ggplot(combined3, aes(x=town_type, y=per_capita, group=town_type, fill=town_type))
gg <- gg +  geom_boxplot()
gg <- gg +  facet_grid(.~type)
gg <- gg + labs(x=NULL, y="Overdoses per capita", title="Adjusted opioid-related overdoses in Connecticut",
subtitle="Per 1,000 residents",
caption="SOURCE: Department of Mental Health and Addiction Services\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Lato Regular")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.text.x=element_text(angle=90, vjust=0.4,hjust=1))
#gg <- gg + theme(axis.ticks=element_blank())
#gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
?facet_grid
gg <- ggplot(combined3, aes(x=town_type, y=per_capita, group=town_type, fill=town_type))
gg <- gg +  geom_boxplot()
gg <- gg +  facet_wrap(~type, ncol=2, scales="free")
gg <- gg + labs(x=NULL, y=NULL, title="Connecticut",
subtitle="Per 1,000 residents",
caption="SOURCE: Department of Mental Health and Addiction Services\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Lato Regular")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.text.x=element_text(angle=90, vjust=0.4,hjust=1))
#gg <- gg + theme(axis.ticks=element_blank())
#gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
gg <- ggplot(combined3, aes(x=town_type, y=per_capita, group=town_type, fill=town_type))
gg <- gg +  geom_boxplot()
gg <- gg +  facet_wrap(~type, ncol=2, scales="free")
gg <- gg + labs(x=NULL, y=NULL, title="Connecticut",
subtitle="Per 1,000 residents",
caption="SOURCE: Department of Mental Health and Addiction Services\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Lato Regular")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.text.x=element_text(angle=90, vjust=0.4,hjust=1))
#gg <- gg + theme(axis.ticks=element_blank())
#gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
View(combined2)
combined4 <- combined2 %>%
select(town.of.residence, town_type, admissions, overdose.deaths, pharm, couns, drop.offs) %>%
gather("type", "total", 3:7)
gg <- ggplot(combined4, aes(x=town_type, y=total, group=town_type, fill=town_type))
gg <- gg +  geom_boxplot()
gg <- gg +  facet_wrap(~type, ncol=2, scales="free")
gg <- gg + labs(x=NULL, y=NULL, title="Connecticut",
subtitle="Per 1,000 residents",
caption="SOURCE: Department of Mental Health and Addiction Services\nAndrew Ba Tran/TrendCT.org")
gg <- gg + theme_bw(base_family="Lato Regular")
gg <- gg + theme(text = element_text(size=16))
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.text.x=element_text(angle=90, vjust=0.4,hjust=1))
#gg <- gg + theme(axis.ticks=element_blank())
#gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold", family="Lato Black", size=22))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=10, r=80), color="#7a7d7e"))
gg <- gg + theme(plot.margin = unit(c(1, 1, 1, 1), "lines"))
gg
View(combined2)
write.csv(combined2, "combined2.csv")
View(tab1)
tab1$combined <- paste0(tab1$`2012`, ", ", tab1$`2013`, ", ",tab1$`2014`, ", ",tab1$`2015`, ", ",tab1$`2016`)
View(tab1)
View(tab1_joined)
write.csv(tab1_joined, "tab1_joined.csv")
write.csv(tab1, "tab1.csv")
View(checkins)
View(location_info)
location_info <- drug_deaths_mega %>%
group_by(residence.and.death) %>%
summarise(deaths=n())
View(location_info)
View(drug_deaths_mega)
View(treat)
View(checkins)
tapply(checkins$admissions, checkins$Year, sum, na.rm=T)
