towns_only$Year <- 0
for (i in 2012:2016) {
towns_only$Year <- i
if (i == 2012) {
mega_towns <- towns_only
} else {
mega_towns <- rbind(mega_towns, towns_only)
}
}
drug_deaths <- read.csv("https://data.ct.gov/api/views/rybz-nyjw/rows.csv?accessType=DOWNLOAD", stringsAsFactors = F)
# Cleaning up race
drug_deaths$R <- "Unknown"
drug_deaths$R <- ifelse(drug_deaths$Race=="Asian Indian", "Asian", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Asian, Other", "Asian", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Chinese", "Asian", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Hispanic, Black", "Hispanic", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Hispanic, White", "Hispanic", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Hispanic, Black", "Hispanic", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Native American, Other", "Other", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="", "Unknown", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Asian", "Asian", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Black", "Black", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Hispanic", "Hispanic", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="White", "White", drug_deaths$R)
# Cleaning up death and residence city locations
drug_deaths <- ctnamecleaner(Death.City, drug_deaths)
names(drug_deaths)[names(drug_deaths) == 'real.town.name'] <- 'town.of.death'
drug_deaths$Residence.City <- gsub("  ", " ", drug_deaths$Residence.City)
drug_deaths <- ctnamecleaner(Residence.City, drug_deaths)
names(drug_deaths)[names(drug_deaths) == 'real.town.name'] <- 'town.of.residence'
drug_deaths$residence.and.death <- ""
drug_deaths$residence.and.death <- ifelse(drug_deaths$town.of.death == drug_deaths$town.of.residence, "Same town of death and residence", "Different town of death than residence")
drug_deaths$residence.and.death <- ifelse(is.na(drug_deaths$town.of.death), "Town of death unknown", drug_deaths$residence.and.death)
drug_deaths$residence.and.death <- ifelse(is.na(drug_deaths$town.of.residence), "Residence unknown", drug_deaths$residence.and.death)
drug_deaths$residence.and.death <- ifelse((is.na(drug_deaths$town.of.residence) & (drug_deaths$Residence.State!="CT")), "Out of town resident, local death", drug_deaths$residence.and.death)
drug_deaths$residence.and.death <- ifelse((is.na(drug_deaths$town.of.residence) & (drug_deaths$Residence.City=="")), "Unknown residence", drug_deaths$residence.and.death)
drug_deaths$date.fixed <- mdy(drug_deaths$Date)
drug_deaths$Year <- year(drug_deaths$date.fixed)
drug_deaths$row <- row.names(drug_deaths)
# fentanyl only
new_fentanyl <- drug_deaths %>%
mutate(cause=str_to_lower(drug_deaths$ImmediateCauseA)) %>%
filter(grepl("fent", cause) | Fentanyl=="Y" )
new_fent <-  select(new_fentanyl, row)
new_fent$update_fent <- "Yes"
new_fent <- as.data.frame(new_fent)
drug_deaths <- left_join(drug_deaths, new_fent)
# heroin only
new_heroin <- drug_deaths %>%
mutate(cause=str_to_lower(drug_deaths$ImmediateCauseA)) %>%
filter(grepl("heroin", cause) | Heroin=="Y" )
new_her <- select(new_heroin, row)
new_her$update_heroin <- "Yes"
new_her <- as.data.frame(new_her)
drug_deaths <- left_join(drug_deaths, new_her)
# prescription opioids
new_presc <- drug_deaths %>%
mutate(cause=str_to_lower(drug_deaths$ImmediateCauseA)) %>%
filter(grepl("oxy", cause) | Oxycodone=="Y" | Oxymorphone=="Y" |
grepl("hydro", cause) | Hydrocodone=="Y" |
grepl("tramad", cause) | Tramad=="Y" |
grepl("morphine", cause) | Morphine..not.heroin.=="Y" )
new_pre <- select(new_presc, row)
new_pre$update_presc <- "Yes"
new_pre <- as.data.frame(new_pre)
drug_deaths <- left_join(drug_deaths, new_pre)
#leftover <- subset(drug_deaths, is.na(update_fent) & is.na(update_heroin) & is.na(update_presc))
#ggplot(leftover, aes(Year)) + geom_bar()
# There were about 461 cases that did not involve overdoses of prescription opioids, heroin, or fentanyl
# OK, checkins and deaths by year and town
# Prepping town and year dataframe
towns_only <- data.frame(town_count[,1])
colnames(towns_only) <- "town.of.residence"
towns_only$Year <- 0
for (i in 2012:2016) {
towns_only$Year <- i
if (i == 2012) {
mega_towns <- towns_only
} else {
mega_towns <- rbind(mega_towns, towns_only)
}
}
# First, deaths by town (just opioids)
opioid_deaths <- drug_deaths %>%
filter(update_presc=="Yes") %>%
group_by(town.of.residence, Year) %>%
summarise(overdose.deaths=n())
#
checkins <- tab2
colnames(checkins) <- c("town.of.residence", "Year", "admissions", "pop", "per_capita_a")
test <- left_join(mega_towns, checkins)
test <- left_join(test, opioid_deaths)
cor(test$admissions, test$overdose.deaths, use="complete.obs")
cor(test$per_capita_a, test$overdose.deaths, use="complete.obs")
test2 <- test
test2$per_capita_o <- round(test2$overdose.deaths/test2$pop*1000,2)
test2$overdose.deaths[is.na(test2$overdose.deaths)] <- 0
cor(test2$admissions, test2$overdose.deaths, use="complete.obs")
cor(test2$per_capita_a, test2$overdose.deaths, use="complete.obs")
cor(test2$per_capita_a, test2$per_capita_o, use="complete.obs")
View(test)
View(drug_deaths)
table(drug_deaths$Year)
str(test2)
sum(test2$admissions)
sum(test2$overdose.deaths)
test3 <- test2 %>%
select(town.of.residence, Year, per_capita_a, per_capita_o) %>%
gather("Year", "Type", 3:4)
View(test3)
test3 <- test2 %>%
select(town.of.residence, Year, per_capita_a, per_capita_o) %>%
gather("Type", "per.capita", 3:4)
gg <- ggplot(test3 aes(x=Year, y=per.capita))
gg <- geom_line()
gg <- facet_wrap(~town.of.residence)
gg
gg <- ggplot(test3 aes(x=Year, y=per.capita))
gg <- gg + geom_line()
gg <- gg + facet_wrap(~town.of.residence)
gg
gg <- ggplot(test3 aes(x=Year, y=per.capita))
gg <- gg + geom_line()
gg <- gg + facet_wrap(~town.of.residence)
gg
gg <- ggplot(test3, aes(x=Year, y=per.capita))
gg <- gg + geom_line()
gg <- gg + facet_wrap(~town.of.residence)
gg
gg <- ggplot(test3, aes(x=Year, y=per.capita, group=Type))
gg <- gg + geom_line()
gg <- gg + facet_wrap(~town.of.residence)
gg
gg <- ggplot(test3, aes(x=Year, y=per.capita, group=Type, color=Type))
gg <- gg + geom_line()
gg <- gg + facet_wrap(~town.of.residence)
gg
drug_deaths <- read.csv("https://data.ct.gov/api/views/rybz-nyjw/rows.csv?accessType=DOWNLOAD", stringsAsFactors = F)
# Cleaning up race
drug_deaths$R <- "Unknown"
drug_deaths$R <- ifelse(drug_deaths$Race=="Asian Indian", "Asian", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Asian, Other", "Asian", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Chinese", "Asian", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Hispanic, Black", "Hispanic", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Hispanic, White", "Hispanic", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Hispanic, Black", "Hispanic", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Native American, Other", "Other", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="", "Unknown", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Asian", "Asian", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Black", "Black", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="Hispanic", "Hispanic", drug_deaths$R)
drug_deaths$R <- ifelse(drug_deaths$Race=="White", "White", drug_deaths$R)
# Cleaning up death and residence city locations
drug_deaths <- ctnamecleaner(Death.City, drug_deaths)
names(drug_deaths)[names(drug_deaths) == 'real.town.name'] <- 'town.of.death'
drug_deaths$Residence.City <- gsub("  ", " ", drug_deaths$Residence.City)
drug_deaths <- ctnamecleaner(Residence.City, drug_deaths)
names(drug_deaths)[names(drug_deaths) == 'real.town.name'] <- 'town.of.residence'
drug_deaths$residence.and.death <- ""
drug_deaths$residence.and.death <- ifelse(drug_deaths$town.of.death == drug_deaths$town.of.residence, "Same town of death and residence", "Different town of death than residence")
drug_deaths$residence.and.death <- ifelse(is.na(drug_deaths$town.of.death), "Town of death unknown", drug_deaths$residence.and.death)
drug_deaths$residence.and.death <- ifelse(is.na(drug_deaths$town.of.residence), "Residence unknown", drug_deaths$residence.and.death)
drug_deaths$residence.and.death <- ifelse((is.na(drug_deaths$town.of.residence) & (drug_deaths$Residence.State!="CT")), "Out of town resident, local death", drug_deaths$residence.and.death)
drug_deaths$residence.and.death <- ifelse((is.na(drug_deaths$town.of.residence) & (drug_deaths$Residence.City=="")), "Unknown residence", drug_deaths$residence.and.death)
drug_deaths$date.fixed <- mdy(drug_deaths$Date)
drug_deaths$Year <- year(drug_deaths$date.fixed)
drug_deaths$row <- row.names(drug_deaths)
# fentanyl only
new_fentanyl <- drug_deaths %>%
mutate(cause=str_to_lower(drug_deaths$ImmediateCauseA)) %>%
filter(grepl("fent", cause) | Fentanyl=="Y" )
new_fent <-  select(new_fentanyl, row)
new_fent$update_fent <- "Yes"
new_fent <- as.data.frame(new_fent)
drug_deaths <- left_join(drug_deaths, new_fent)
# heroin only
new_heroin <- drug_deaths %>%
mutate(cause=str_to_lower(drug_deaths$ImmediateCauseA)) %>%
filter(grepl("heroin", cause) | Heroin=="Y" )
new_her <- select(new_heroin, row)
new_her$update_heroin <- "Yes"
new_her <- as.data.frame(new_her)
drug_deaths <- left_join(drug_deaths, new_her)
# prescription opioids
new_presc <- drug_deaths %>%
mutate(cause=str_to_lower(drug_deaths$ImmediateCauseA)) %>%
filter(grepl("oxy", cause) | Oxycodone=="Y" | Oxymorphone=="Y" |
grepl("hydro", cause) | Hydrocodone=="Y" |
grepl("tramad", cause) | Tramad=="Y" |
grepl("morphine", cause) | Morphine..not.heroin.=="Y" )
new_pre <- select(new_presc, row)
new_pre$update_presc <- "Yes"
new_pre <- as.data.frame(new_pre)
drug_deaths <- left_join(drug_deaths, new_pre)
#leftover <- subset(drug_deaths, is.na(update_fent) & is.na(update_heroin) & is.na(update_presc))
#ggplot(leftover, aes(Year)) + geom_bar()
# There were about 461 cases that did not involve overdoses of prescription opioids, heroin, or fentanyl
# OK, checkins and deaths by year and town
# Prepping town and year dataframe
towns_only <- data.frame(town_count[,1])
colnames(towns_only) <- "town.of.residence"
towns_only$Year <- 0
for (i in 2012:2016) {
towns_only$Year <- i
if (i == 2012) {
mega_towns <- towns_only
} else {
mega_towns <- rbind(mega_towns, towns_only)
}
}
# First, deaths by town (just opioids)
opioid_deaths <- drug_deaths %>%
filter(update_presc=="Yes") %>%
group_by(town.of.residence, Year) %>%
summarise(overdose.deaths=n())
#
checkins <- tab2
colnames(checkins) <- c("town.of.residence", "Year", "admissions", "pop", "per_capita_a")
test <- left_join(mega_towns, checkins)
test <- left_join(test, opioid_deaths)
cor(test$admissions, test$overdose.deaths, use="complete.obs")
cor(test$per_capita_a, test$overdose.deaths, use="complete.obs")
test2 <- test
test2$per_capita_o <- round(test2$overdose.deaths/test2$pop*10000,2)
test2$overdose.deaths[is.na(test2$overdose.deaths)] <- 0
cor(test2$admissions, test2$overdose.deaths, use="complete.obs")
cor(test2$per_capita_a, test2$overdose.deaths, use="complete.obs")
cor(test2$per_capita_a, test2$per_capita_o, use="complete.obs")
test3 <- test2 %>%
select(town.of.residence, Year, per_capita_a, per_capita_o) %>%
gather("Type", "per.capita", 3:4)
gg <- ggplot(test3, aes(x=Year, y=per.capita, group=Type, color=Type))
gg <- gg + geom_line()
gg <- gg + facet_wrap(~town.of.residence)
gg
View(test3)
View(test2)
gg <- ggplot(test3, aes(x=Year, y=per.capita, group=Type, color=Type))
gg <- gg + geom_line()
gg <- gg + facet_wrap(~town.of.residence, scales="free")
gg
View(test2)
checkins2 <- checkins %>%
group_by(town.of.residence) %>%
summarise(admissions=n())
View(checkins2)
View(checkins)
checkins2 <- checkins %>%
group_by(town.of.residence) %>%
summarise(admissions=sum(admissions))
View(checkins2)
opioid_deaths2 <- drug_deaths %>%
filter(update_presc=="Yes") %>%
group_by(town.of.residence) %>%
summarise(overdose.deaths=n())
View(opioid_deaths2)
head(towns_only)
town_totals <- left_join(towns_only, opioid_deaths2)
town_totals <- left_join(towns_totals, checkins2)
town_totals <- left_join(town_totals, checkins2)
View(town_totals)
cor(town_totals$admissions, town_total$overdose.deaths, use="complete.obs")
cor(town_totals$admissions, town_totals$overdose.deaths, use="complete.obs")
town_totals <- ctpopulator(town.of.residence, town_totals)
town_totals$per_cap_o <- round(town_totals$overdose.deaths/town_totals$pop2013*1000,2)
town_totals$per_cap_a <- round(town_totals$admissions/town_totals$pop2013*1000,2)
cor(town_totals$per_cap_a, town_totals$per_cap_o, use="complete.obs")
View(town_totals)
town_totals$per_cap_o <- round(town_totals$overdose.deaths/town_totals$pop2013*100000,2)
town_totals$per_cap_a <- round(town_totals$admissions/town_totals$pop2013*1000,2)
cor(town_totals$per_cap_a, town_totals$per_cap_o, use="complete.obs")
gg <- ggplot(town_totals, aes(x=town.of.residence, y=town_totals))
gg <- gg + geom_point()
gg
gg <- ggplot(town_totals, aes(x=overdose.deaths, y=admissions))
gg <- gg + geom_point()
gg
gg <- ggplot(town_totals, aes(x=per_cap_o, y=per_cap_a))
gg <- gg + geom_point()
gg <- gg + labs(x=NULL, y=NULL,
title="Overdose deaths compared to clinical admissions by town",
subtitle="",
caption="Department of Mental Health and Addiction Services")
gg
gg <- ggplot(town_totals, aes(x=per_cap_o, y=per_cap_a))
gg <- gg + geom_point()
gg <- gg + labs(x=NULL, y=NULL,
title="Overdose deaths compared to clinical admissions by town (per 1,000 residents)",
subtitle="",
caption="Department of Mental Health and Addiction Services")
gg
gg <- ggplot(town_totals, aes(x=overdose.deaths, y=admissions))
gg <- gg + geom_point()
gg <- gg + labs(x=NULL, y=NULL,
title="Overdose deaths compared to clinical admissions by town",
subtitle="",
caption="Department of Mental Health and Addiction Services")
gg
opioid_deaths2 <- drug_deaths %>%
filter(update_presc=="Yes") %>%
group_by(town.of.residence) %>%
summarise(overdose.deaths=n())
#
checkins <- tab2
colnames(checkins) <- c("town.of.residence", "Year", "admissions", "pop", "per_capita_a")
checkins2 <- checkins %>%
group_by(town.of.residence) %>%
summarise(admissions=sum(admissions))
town_totals <- left_join(towns_only, opioid_deaths2)
town_totals <- left_join(town_totals, checkins2)
cor(town_totals$admissions, town_totals$overdose.deaths, use="complete.obs")
town_totals <- ctpopulator(town.of.residence, town_totals)
town_totals$per_cap_o <- round(town_totals$overdose.deaths/town_totals$pop2013*1000,2)
town_totals$per_cap_a <- round(town_totals$admissions/town_totals$pop2013*1000,2)
cor(town_totals$per_cap_a, town_totals$per_cap_o, use="complete.obs")
gg <- ggplot(town_totals, aes(x=overdose.deaths, y=admissions))
gg <- gg + geom_point()
gg <- gg + labs(x="Overdoses", y="Admissions",
title="Overdose deaths compared to clinical admissions by town",
subtitle="",
caption="Department of Mental Health and Addiction Services")
gg
gg <- ggplot(town_totals, aes(x=per_cap_o, y=per_cap_a))
gg <- gg + geom_point()
gg <- gg + labs(x="Overdoses per capita", y="Admissions per capita",
title="Overdose deaths compared to clinical admissions by town (per 1,000 residents)",
subtitle="",
caption="Department of Mental Health and Addiction Services")
gg
library("censusapi")
source("keys.R")
vars2014 <- listCensusMetadata(name="acs5", vintage=2014, "v")
data2014 <- getCensus(name="acs5",
vintage=2014,
key=census_key,
vars=c("NAME", "B19013_001E"),
region="county subdivision:*", state="09")
data2014 <- getCensus(name="acs5",
vintage=2014,
key=census_key,
vars=c("NAME", "B19013_001E"),
region="county subdivision:*",  regionin="state:0p")
data2014 <- getCensus(name="acs5",
vintage=2014,
key=census_key,
vars=c("NAME", "B19013_001E"),
region="county subdivision:*",  regionin="state:09")
View(data2014)
data2014$town.of.residence <- gsub(" town*.", "", data2014$NAME)
View(data2014)
data2014$town.of.residence <- gsub(" town.*", "", data2014$NAME)
View(data2014)
data2014 <- subset(data2014, !is.na(B19013_001E))
View(data2014)
data2014 <- data2014[,5:4]
View(data2014)
data2014 <- getCensus(name="acs5",
vintage=2014,
key=census_key,
vars=c("NAME", "B19013_001E"),
region="county subdivision:*",  regionin="state:09")
data2014$town.of.residence <- gsub(" town.*", "", data2014$NAME)
data2014 <- subset(data2014, !is.na(B19013_001E))
data2014 <- data2014[,5:6]
colnames(2014) <- c("median.income", "town.of.residence")
colnames(data2014) <- c("median.income", "town.of.residence")
View(data2014)
town_totals2 <- left_join(town_totals, data2014)
str(town_totals2)
View(town_totals2)
opioid_deaths2 <- drug_deaths %>%
filter(update_presc=="Yes") %>%
group_by(town.of.residence) %>%
summarise(overdose.deaths=n())
#
checkins <- tab2
colnames(checkins) <- c("town.of.residence", "Year", "admissions", "pop", "per_capita_a")
checkins2 <- checkins %>%
group_by(town.of.residence) %>%
summarise(admissions=sum(admissions))
town_totals <- left_join(towns_only, opioid_deaths2)
town_totals <- left_join(town_totals, checkins2)
cor(town_totals$admissions, town_totals$overdose.deaths, use="complete.obs")
town_totals <- ctpopulator(town.of.residence, town_totals)
town_totals$per_cap_o <- round(town_totals$overdose.deaths/town_totals$pop2013*1000,2)
town_totals$per_cap_a <- round(town_totals$admissions/town_totals$pop2013*1000,2)
cor(town_totals$per_cap_a, town_totals$per_cap_o, use="complete.obs")
town_totals2 <- town_totals
town_totals2$town.of.residence <- str_to_proper(town_totals2$town.of.residence)
left_join(town_totals2, data2014)
town_totals2$town.of.residence <- str_to_proper(town_totals2$town.of.residence)
library(stringr)
town_totals2$town.of.residence <- str_to_proper(town_totals2$town.of.residence)
town_totals2$town.of.residence <- str_to_title(town_totals2$town.of.residence)
left_join(town_totals2, data2014)
town_totals2 <- left_join(town_totals2, data2014)
cor(town_totals2$per_cap_a, town_totals2$median.income, use="complete.obs")
gg <- ggplot(town_totals2, aes(x=median.income, y=per_cap_a))
gg <- gg + geom_point()
gg <- gg + labs(x="Median income", y="Admissions per capita",
title="Clinical admissions by town (per 1,000 residents) compared to median income",
subtitle="",
caption="Department of Mental Health and Addiction Services")
gg
str(town_totals2)
gg <- ggplot(town_totals2, aes(x=median.income, y=admissions))
gg <- gg + geom_point()
gg <- gg + labs(x="Median income", y="Admissions per capita",
title="Clinical admissions by town (per 1,000 residents) compared to median income",
subtitle="",
caption="Department of Mental Health and Addiction Services")
gg
gg <- ggplot(town_totals2, aes(x=median.income, y=per_cap_o))
gg <- gg + geom_point()
gg <- gg + labs(x="Median income", y="Admissions per capita",
title="Clinical admissions by town (per 1,000 residents) compared to median income",
subtitle="",
caption="Department of Mental Health and Addiction Services")
gg
str(tab2_joined)
View(town_totals)
View(test)
library(dplyr)
library(tidyr)
library(ctnamecleaner)
library(ggplot2)
library(extrafont)
library(scales)
library(rgdal)
require(maptools)
library(stringr)
library(knitr)
library(lubridate)
library("censusapi")
source("keys.R")
treat <- read.csv("https://data.ct.gov/api/views/4pv7-jhxb/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
treat$Admissions[is.na(treat$Admissions)] <- 0
gg <- ggplot(treat, aes(y=Admissions, x=FiscalYear))
gg <- gg + geom_bar(stat="identity")
gg <- gg + facet_wrap(~Town, ncol=4, scale="free_x")
#gg <- gg + facet_wrap(~state, scale="free", ncol=5)
#gg <- gg + scale_x_continuous(limits=c(2012,2016), breaks=c(2012,2016),
#        labels=c("2012", "2016"))
gg <- gg + labs(x=NULL, y=NULL,
title="Opioid Related Treatment Admissions by Town",
subtitle="",
caption="Department of Mental Health and Addiction Services")
gg <- gg + theme_minimal(base_family="Lato Regular")
gg <- gg + theme(panel.grid.major.y=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(plot.title=element_text(family="Lato Black"))
gg
# gg <- ggplot(treat, aes(y=Unduplicated.Clients, x=FiscalYear))
# gg <- gg + geom_bar(stat="identity")
# gg <- gg + facet_wrap(~Town, ncol=4, scale="free_x")
# #gg <- gg + facet_wrap(~state, scale="free", ncol=5)
# #gg <- gg + scale_x_continuous(limits=c(2012,2016), breaks=c(2012,2016),
# #        labels=c("2012", "2016"))
# gg <- gg + labs(x=NULL, y=NULL,
#                 title="Opioid Related Treatment Admissions (unduplicated clients) by Town",
#                 subtitle="",
#                 caption="Department of Mental Health and Addiction Services")
# gg <- gg + theme_minimal(base_family="Lato Regular")
# gg <- gg + theme(panel.grid.major.y=element_blank())
# gg <- gg + theme(panel.grid.minor=element_blank())
# gg <- gg + theme(plot.title=element_text(family="Lato Black"))
# gg
library(dplyr)
library(tidyr)
library(ctnamecleaner)
library(ggplot2)
library(extrafont)
library(scales)
library(rgdal)
require(maptools)
library(stringr)
library(knitr)
library(lubridate)
library("censusapi")
source("keys.R")
treat <- read.csv("https://data.ct.gov/api/views/4pv7-jhxb/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
treat$Admissions[is.na(treat$Admissions)] <- 0
gg <- ggplot(treat, aes(y=Admissions, x=FiscalYear))
gg <- gg + geom_bar(stat="identity")
gg <- gg + facet_wrap(~Town, ncol=4, scale="free_x")
#gg <- gg + facet_wrap(~state, scale="free", ncol=5)
#gg <- gg + scale_x_continuous(limits=c(2012,2016), breaks=c(2012,2016),
#        labels=c("2012", "2016"))
gg <- gg + labs(x=NULL, y=NULL,
title="Opioid Related Treatment Admissions by Town",
subtitle="",
caption="Department of Mental Health and Addiction Services")
gg <- gg + theme_minimal(base_family="Lato Regular")
gg <- gg + theme(panel.grid.major.y=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(plot.title=element_text(family="Lato Black"))
gg
# gg <- ggplot(treat, aes(y=Unduplicated.Clients, x=FiscalYear))
# gg <- gg + geom_bar(stat="identity")
# gg <- gg + facet_wrap(~Town, ncol=4, scale="free_x")
# #gg <- gg + facet_wrap(~state, scale="free", ncol=5)
# #gg <- gg + scale_x_continuous(limits=c(2012,2016), breaks=c(2012,2016),
# #        labels=c("2012", "2016"))
# gg <- gg + labs(x=NULL, y=NULL,
#                 title="Opioid Related Treatment Admissions (unduplicated clients) by Town",
#                 subtitle="",
#                 caption="Department of Mental Health and Addiction Services")
# gg <- gg + theme_minimal(base_family="Lato Regular")
# gg <- gg + theme(panel.grid.major.y=element_blank())
# gg <- gg + theme(panel.grid.minor=element_blank())
# gg <- gg + theme(plot.title=element_text(family="Lato Black"))
# gg
